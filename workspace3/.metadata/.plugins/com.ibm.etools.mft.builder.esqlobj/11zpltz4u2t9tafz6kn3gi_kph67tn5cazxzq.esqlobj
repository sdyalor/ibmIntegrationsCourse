/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		DECLARE requestIdentifier CHARACTER;
	/*
	 * set uri for Response
	 */	
		DECLARE iLocalEnvRequestId REFERENCE TO InputLocalEnvironment.Destination.HTTP.RequestIdentifier;
		DECLARE oLocalEnvRequestId REFERENCE TO OutputLocalEnvironment.Destination.HTTP.RequestIdentifier;
		SET oLocalEnvRequestId = iLocalEnvRequestId;	
/*		
	/*
	 * create json tree for response
	 */
	 	CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON' NAME 'JSON';
	 	CREATE LASTCHILD OF OutputRoot.JSON NAME 'Data';
	/*
	 * create reference to input body from Request
	 */
		--CREATE LASTCHILD OF OutputRoot.JSON.Data NAME 'Productos';  
	 	DECLARE reqJsonBody REFERENCE TO InputRoot.JSON.Data;
	 	DECLARE resJsonBody REFERENCE TO OutputRoot.JSON.Data;
	 	DECLARE id CHARACTER;
	 	
--	    CALL getFormatCode(reqJsonBody.ID,Environment.result[]);
	    CALL getFormatCode(reqJsonBody.ID,resJsonBody.result[]);
	    SET resJsonBody.mensaje[] = Environment.result[];
*/
		DECLARE RequestDataType CHARACTER;
		SET RequestDataType = 'asdf';
		
		IF InputRoot.JSON THEN
			SET RequestDataType = 'json';
		ELSEIF InputRoot.XMLNSC THEN
			SET RequestDataType = 'xml';
		END IF;
		
	    CASE RequestDataType
			WHEN 'xml' THEN
				CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC' NAME 'XMLNSC';
				CREATE LASTCHILD OF OutputRoot.XMLNSC NAME 'Data';
				DECLARE refOut REFERENCE TO OutputRoot.XMLNSC.Data;
				SET refOut.CODE = CODE.LIST[1].CODE;
				SET refOut.NAME = NAME;
				SET OutputLocalEnvironment.Destination.HTTP.RequestURL = 'http://localhost:7080/test/xml';
	    	WHEN 'json' THEN
				CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON' NAME 'JSON';
				CREATE LASTCHILD OF OutputRoot.JSON NAME 'Data';
				DECLARE refOut REFERENCE TO OutputRoot.JSON.Data;
				SET refOut.CODE = CODE.LIST[1].CODE;
				SET refOut.NAME = NAME;
				SET OutputLocalEnvironment.Destination.HTTP.RequestURL = 'http://localhost:7080/test/json';
	    ELSE END CASE;
		
		
		RETURN TRUE;
		
	END;

	--read PROCEDURE SP_READ_PROD (P_COD_PROD IN INTEGER, C_PARAMETER OUT SYS_REFCURSOR)
	CREATE PROCEDURE getFormatCode (IN formatID CHARACTER)
	  LANGUAGE DATABASE
	  DYNAMIC RESULT SETS 1
	  EXTERNAL NAME "ACE_SAMPLE.PKG_CONTROL.SP_READ_MESSAGE";
